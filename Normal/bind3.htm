<html>
<head>
<title>极简双向绑定</title>
</head>
<body>
	<div id="app">
		<input type="text" id="a" />
		<span id="b"></span>
	</div>
</body>
</html>

<script type="text/javascript">
function compile(node,vm){
	var reg = /\{\{(.*)}\}/;
	// 节点类型为元素
	if(node.nodeType == 1){
		var attr = node.attributes;
		// 解析属性
		for(var i = 0; i < attr.length; ++i){
			if(attr[i].nodeName == 'v-model'){
				var name = attr[i].nodeValue; // 获取v-model绑定的属性名				
				node.value = vm.data[name]; // 将data的值赋给该node
				node.removeAttribute('v-model');
			}
		}
	}
	// 节点类型为text
	else if(node.nodeType == 3){
		if(reg.test(node.nodeValue)){
			var name = RegExp.$1; // 获取匹配到的字符串
			name = name.trim();
			node.nodeValue = vm.data[name]; // 将data的值赋给该node
		}
	}
}

function nodeToFragment(node,vm){
	var oFragment = document.createDocumentFragment();
	var child;
	while(child = node.firstChild){
		compile(child,vm);
		oFragment.appendChild(child); // 将子节点劫持到文档片段中
	}
	return oFragment;
}

function Vue(options){
	this.data = options.data;
	var id = options.el;
	var dom = nodeToFragment(document.getElementById(id),this);
	console.log(dom)
	// 编译完成后，将dom返回到app中
	document.getElementById(id).appendChild(dom);
}

var vm = new Vue({
	el: 'app',
	data:{
		text: 'hello world'
	}
});

/*
var oFragment = document.createDocumentFragment();
for(var i = 0 ; i < 10; i ++) {
    var p = document.createElement("p");
    var oTxt = document.createTextNode("段落" + i);
    p.appendChild(oTxt);
    oFragment.appendChild(p);}
document.body.appendChild(oFragment);
*/
</script>